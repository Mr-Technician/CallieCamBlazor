@page "/"
@using System.Text.Json;
@using System.Device.Gpio;

<PageTitle>Index</PageTitle>

<h1>Hello, world!</h1>

Welcome to your new app.

<SurveyPrompt Title="How is Blazor working for you?" />

<button class="btn btn-primary" @onclick="(() => GetSensorData())">Refresh Data</button>
<button class="btn btn-primary" @onclick="(() => ToggleLights(true))">LEDs On</button>
<button class="btn btn-primary" @onclick="(() => ToggleLights(false))">LEDs Off</button>

<p>@temp</p>
<p>@humidity</p>

@code {
	double temp;
	double humidity;

	private async Task GetSensorData()
	{
		var result = await Task.Run(() => "./sensor".Bash());
		Console.WriteLine(result);
		var tuple = JsonSerializer.Deserialize<Tuple<double, double>>(result);
		Console.WriteLine(tuple?.Item1);
		temp = tuple?.Item1 ?? 0;
		humidity = tuple?.Item2 ?? 0;
	}

	private void ToggleLights(bool state)
	{
		int led1 = 2;
		int led2 = 3;
		int led3 = 4;
		int led4 = 17;
		using var controller = new GpioController();
		controller.OpenPin(led1, PinMode.Output);
		controller.OpenPin(led2, PinMode.Output);
		controller.OpenPin(led3, PinMode.Output);
		controller.OpenPin(led4, PinMode.Output);

		controller.Write(led1, ((state) ? PinValue.High : PinValue.Low));
		controller.Write(led2, ((state) ? PinValue.High : PinValue.Low));
		controller.Write(led3, ((state) ? PinValue.High : PinValue.Low));
		controller.Write(led4, ((state) ? PinValue.High : PinValue.Low));
	}
}